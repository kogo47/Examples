// string[,] table = new string[2, 5];//определяем таблицу строк
//иницилизация для сторок по умолчанию происходит
//вот такой константой String.Empty 
//table[0,0] table[0,1] table[0,2] table[0,3] table[0,4] определение индекса столбцов и сторок
//table[1,0] table[1,1] table[2,2] table[3,3] table[4,4]определение индекса строк и столбцов
// table/*именования массива*/[1, 2] = "слово";//обращаемся к нужному елементу

//это самый простой пример
// //используем циклы(цыкл в цыуле) 
// //для того что бы распечатать данный массив
// for (int rows = 0; rows/*строки*/ < 2; rows++)
// {
//     for (int columns = 0; columns/*столбцы*/ < 5; columns++)
//     {
//         Console.WriteLine($"-{table/*имя массива*/[rows, columns]}-");
//     }
// }


// //делаем тоже самое тлько с цифрами
//                               //иницилизация массива
// int [,] matrix/*имя массива*/ = new int[3/*строка*/, 4/*столбцы*/];//определяем двемерный массив
//         //цикл   //метод            //3
// for (int i = 0; i/*строка*/ < matrix.GetLength(0); i++)//универсальный указатель строк matrix.GetLength(0),вместо 3
// {           //цикл    //метод             //4
//     for (int j = 0; j/*столбцы*/ < matrix.GetLength(1); j++)//универсальный указатель столбцов matrix.GetLength(1),вместо 4
//     {
//         Console.Write/*Line*/($"{matrix[i, j]} ");//после вывода очередного элемента 
//                                                   //переводим курсол на новую позицию
//     }
// Console.WriteLine();//переход на нувую строку
// }



//создаем метод который отдельно будет печатать
//двухмерную матрицу и заполнять ее числами


                //в качестве аргумента передаем
// void PrintArray(int[,] matr)//прямоугольную таблицу чисел
// {

//     for (int i = 0; i/*строка*/ < matr.GetLength(0); i++)//универсальный указатель строк matrix.GetLength(0),вместо 3
//     {           //цикл    //метод             //4
//         for (int j = 0; j/*столбцы*/ < matr.GetLength(1); j++)//универсальный указатель столбцов matrix.GetLength(1),вместо 4
//        {
//             Console.Write/*Line*/($"{matr[i, j]} ");//после вывода очередного элемента 
//                                                   //переводим курсол на новую позицию
//        }
//        Console.WriteLine();//переход на нувую строку
//     }
// }

// //опишим метод который будет заполнять нашу матрицу случайными цифрами
// void FillArray(int[,] matr)
// {
//     for (int i = 0; i < matr.GetLength(0); i++)
//     {
//         for (int j = 0; j < matr.GetLength(1); j++)
//         {//обращаемся к конкретному элементу [i, j] через генератор псевда случайных чесел
//            matr[i, j] = new Random().Next(1, 10);//[1; 10)
//         }
//     }
// }
// //иницилизация массива
// int [,] matrix/*имя массива*/ = new int[3/*строка*/, 4/*столбцы*/];//определяем двемерный массив
// PrintArray(matrix);//печатаем матрицу которая была определена выше
// Console.WriteLine();
// FillArray(matrix);
// PrintArray(matrix);













// int[,] pic = new int[,]
// {
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
// };






// void PrintImage(int[,] image)//прямоугольную таблицу чисел
// {

//     for (int i = 0; i/*строка*/ < image.GetLength(0); i++)//универсальный указатель строк matrix.GetLength(0),вместо 3
//     {           //цикл    //метод             //4
//         for (int j = 0; j/*столбцы*/ < image.GetLength(1); j++)//универсальный указатель столбцов matrix.GetLength(1),вместо 4
//        {
//             // Console.Write/*Line*/($"{image[i, j]} ");//после вывода очередного элемента 
//                                                        //переводим курсол на новую позицию
//             if/*если*/(image[i, j] == 0) Console.Write($" ");
//             else/*иначе*/ Console.Write($"+");                                           
//        }
//        Console.WriteLine();//переход на нувую строку
//     }
// }
// //метод который будет закрашивать нашу картинку
//               //аргументы
// void FillImage(int row/*позиция строки*/, int col/*позиция пикселя*/)
// {
//     if/*если*/(pic[row, col] == 0/*не закрашен*/)
//     {
//         pic[row, col] = 1;//будем красить
//         FillImage(row-1, col);
//         FillImage(row, col-1);
//         FillImage(row+1, col);
//         FillImage(row, col+1);
//     }
// }
// PrintImage(pic);
// FillImage(13, 13);
// PrintImage(pic);








//вычисления факториала
// 






//числа фибоначи
//f(1) = 1
//f(2) = 1
//f(n) = f(n-1) + f(n-2)

// double Fibonacci (int n)
// {
//    if(n == 1 || n == 2) return 1;
//    else return Fibonacci (n-1) + Fibonacci (n-2);
// }
// for (int i = 1; i < 50; i++)
// {
//     Console.WriteLine($"f{i}) = {Fibonacci(i)}");
// }
